<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.idongjia.live.db.mybatis.mapper.LiveBookMapper">
    
    <resultMap id="pureLiveBookMap" type="cn.idongjia.live.db.mybatis.po.LiveBookPO">
        <id     property="id"           column="id"         />
        <result property="userId"       column="uid"     />
        <result property="liveId"       column="lid"     />
        <result property="status"       column="status"     />
        <result property="createTime"   column="createtm"   />
        <result property="modifiedTime" column="modifiedtm" />
    </resultMap>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="liveBookPO">
        INSERT INTO live_pure_book
            (uid, lid, status, createtm, modifiedtm)
        VALUES
            (#{userId}, #{liveId}, #{status}, #{createTime}, #{modifiedTime})
    </insert>

    <update id="update">
        UPDATE live_pure_book
        SET modifiedtm = from_unixtime(#{newUpdateTime})
        <if test="po.status != null"       >, status = #{po.status}          </if>
        <if test="po.createTime != null"   >, createtm = #{po.createTime}    </if>
        <if test="po.modifiedTime != null" >, modifiedtm = #{po.modifiedTime}</if>
        WHERE uid=#{po.userId} and lid = #{po.liveId}
    </update>

    <select id="list" resultMap="pureLiveBookMap">
        SELECT id, uid, lid, status, createtm, modifiedtm
        FROM live_pure_book
        <where>
          <if test="id != null"> AND id = #{id}</if>
          <if test="userId != null"> AND uid = #{userId}</if>
            <if test="liveIds != null and liveIds.size>0">
                AND lid in
                <foreach collection="liveIds" item="item" open="(" separator="," close=")">
                  #{item}
                </foreach>
            </if>
          <if test="status != null"> AND status = #{status}</if>
        </where>
        <if test="orderBy != null"> ORDER BY ${orderBy}</if>
        <if test="limit != null">LIMIT #{limit}</if>
        <if test="offset != null">OFFSET #{offset}</if>
    </select>

    <select id="count" resultType="java.lang.Integer">
        SELECT count(id)
        FROM live_pure_book
        <where>
          <if test="id != null"> AND id = #{id}</if>
          <if test="userId != null"> AND uid = #{userId}</if>
            <foreach collection="liveIds" item="liveId" separator=","  open="(" close=")">
                #{liveId}
            </foreach>
            <if test="status != null"> AND status = #{status}</if>
        </where>
    </select>

    <select id="searchPureLives" resultType="java.lang.Long">
        SELECT lp.id FROM live_pure_book lpb
        LEFT JOIN live_pure lp ON lp.id = lpb.liveId
        LEFT JOIN live_show ls on ls.id = lpb.liveId
        WHERE lpb.status = #{status} AND lpb.userId = #{userId} AND lp.status = 1
        ORDER BY
          CASE
              WHEN state = 2 THEN 0
              WHEN state = 1 THEN 1
              WHEN state = 3 THEN 2
          END,
          CASE
              WHEN state = 2 THEN starttm
          END DESC,
          CASE
              WHEN state = 1 THEN prestarttm
          END,
          CASE
              WHEN state = 3 THEN endtm
          END DESC,
          weight DESC
        <if test="limit != null"> LIMIT #{limit}</if>
        <if test="offset != null"> OFFSET #{offset}</if>
    </select>


    <insert id="batchAddLiveBook" >
       INSERT INTO live_pure_book
            (uid, lid, status, createtm, modifiedtm)
           VALUES
           <foreach collection="pos" item="item" separator=",">
           (#{item.userId}, #{item.liveId}, #{item.status}, #{item.createTime}, #{item.modifiedTime})
           </foreach>

    </insert>

    <update id="batchDeletePureLiveBook" >

        <foreach collection="pos" separator=";" item="item">
            UPDATE live_pure_book  set  status=#{item.status},modifiedtm=from_unixtime(#{newUpdateTime})
            where uid=#{item.userId} and lid=#{liveId}
        </foreach>

    </update>

    <select id="countGroup" resultType="cn.idongjia.live.db.mybatis.po.LiveBookCountPO">
        SELECT count(id) as `count`,lid as  `liveId`
        FROM live_pure_book
        <where>
            lid in
            <foreach collection="liveIds" item="liveId" separator=","  open="(" close=")">
                #{liveId}
            </foreach>
            AND status = 0
        </where>
        group by lid
    </select>

</mapper>
